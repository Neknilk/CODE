import pandas as pd
import matplotlib.pyplot as plt

# Read the CSV file into a DataFrame with low_memory set to False
df = pd.read_csv('C:\\Users\\jayva\\Documents\\GitHub\\FOE\\DATA\\FILTERED\\combined_data_filled.csv', low_memory=False)

# Filter data for a specific flight (e.g., flight 1)
flight_data = df[df['flight'] == 69]

# Convert the 'timestamp' column to datetime
flight_data['timestamp'] = pd.to_datetime(flight_data['timestamp'])

# Calculate flight duration in seconds
flight_data['flight_duration_seconds'] = (flight_data['timestamp'] - flight_data['timestamp'].min()).dt.total_seconds()

# Plotting
plt.figure(figsize=(10, 6))

# Plot climb phase in green
plt.scatter(flight_data[flight_data['flight_phase'] == 'climb']['flight_duration_seconds'], 
            flight_data[flight_data['flight_phase'] == 'climb']['altitude'], 
            color='green', label='Climb')

# Plot cruise phase in yellow
plt.scatter(flight_data[flight_data['flight_phase'] == 'cruise']['flight_duration_seconds'], 
            flight_data[flight_data['flight_phase'] == 'cruise']['altitude'], 
            color='yellow', label='Cruise')

# Plot descent phase in red
plt.scatter(flight_data[flight_data['flight_phase'] == 'descent']['flight_duration_seconds'], 
            flight_data[flight_data['flight_phase'] == 'descent']['altitude'], 
            color='red', label='Descent')

# Customize the plot
plt.title('Altitude vs Flight Duration (Flight 1)')
plt.xlabel('Flight Duration (seconds)')
plt.ylabel('Altitude')
plt.legend()
plt.grid(True)

# Show the plot
plt.show()
